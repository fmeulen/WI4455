d
# include posterior mean in figure
pm <-  read_delim("postmean_paths.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
pm <- exp(pm)
d <- d %>% mutate(postmean=rep(pm$X1,2), qlow = rep(pm$X2,2), qup = rep(pm$X3,2) ) %>%  mutate(t1 = time_elapsed %% 1)
pl2 <- d %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
facet_wrap(~meastype,ncol=1,scales='free') + ylab("concentration") +
geom_path(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.3,alpha=0.8)
pl2
pdf("~/.julia/dev/DataFusion/figs/vis_data_fit.pdf",width=7,height=5)
pl2
dev.off()
# first 10 years
pl2a <- d %>% filter(time_elapsed<=10) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(0,10,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitstart.pdf",width=7,height=4)
pl2a
dev.off()
pl2b <- d %>% filter(time_elapsed>35) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(35,43,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitend.pdf",width=7,height=4)
pl2b
dev.off()
dsat <- d %>% filter(meastype=="chl")  %>% drop_na()
psat <- ggplot() +geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dsat, mapping=aes(x=time_elapsed, y=y),colour='blue',size=0.5)+
ylab("concentration") + ggtitle("satellite data") +xlab("") +
geom_line(data=d, mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)
dwater <-  d %>% filter(meastype=="chl_water") %>% drop_na()
pwater <- ggplot()+geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dwater, mapping=aes(x=time_elapsed, y=y),colour='red',size=0.5)+
ylab("concentration") + ggtitle("water data") +
geom_line(data=d,mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)+xlab("time elapsed since January 1, 1976 ")
pdf("~/.julia/dev/DataFusion/figs/vis_fit.pdf",width=7,height=4)
grid.arrange(psat, pwater)
dev.off()
# pl4 <- d  %>% ggplot(aes(x=t1, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
#   geom_smooth(colour='blue') + facet_wrap(~meastype)+
#   xlab("time elapsed") + ylab("concentration") + geom_hline(yintercept = 0)+
#  geom_point(aes(x=t1,y=postmean),size=0.3, colour='black')
# pl4
# pdf("~/.julia/dev/DataFusion/figs/vis_data_periodic.pdf",width=7,height=5)
# pl4
# dev.off()
# include posterior mean in figure
pm <-  read_delim("postmean_paths.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
d <- d %>% mutate(postmean=rep(pm$X1,2), qlow = rep(pm$X2,2), qup = rep(pm$X3,2) ) %>%  mutate(t1 = time_elapsed %% 1)
pl2 <- d %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
facet_wrap(~meastype,ncol=1,scales='free') + ylab("concentration") +
geom_path(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.3,alpha=0.8)
pl2
pdf("~/.julia/dev/DataFusion/figs/vis_data_fit.pdf",width=7,height=5)
pl2
dev.off()
# first 10 years
pl2a <- d %>% filter(time_elapsed<=10) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(0,10,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitstart.pdf",width=7,height=4)
pl2a
dev.off()
pl2b <- d %>% filter(time_elapsed>35) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(35,43,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitend.pdf",width=7,height=4)
pl2b
dev.off()
dsat <- d %>% filter(meastype=="chl")  %>% drop_na()
psat <- ggplot() +geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dsat, mapping=aes(x=time_elapsed, y=y),colour='blue',size=0.5)+
ylab("concentration") + ggtitle("satellite data") +xlab("") +
geom_line(data=d, mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)
dwater <-  d %>% filter(meastype=="chl_water") %>% drop_na()
pwater <- ggplot()+geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dwater, mapping=aes(x=time_elapsed, y=y),colour='red',size=0.5)+
ylab("concentration") + ggtitle("water data") +
geom_line(data=d,mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)+xlab("time elapsed since January 1, 1976 ")
pdf("~/.julia/dev/DataFusion/figs/vis_fit.pdf",width=7,height=4)
grid.arrange(psat, pwater)
dev.off()
# pl4 <- d  %>% ggplot(aes(x=t1, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
#   geom_smooth(colour='blue') + facet_wrap(~meastype)+
#   xlab("time elapsed") + ylab("concentration") + geom_hline(yintercept = 0)+
#  geom_point(aes(x=t1,y=postmean),size=0.3, colour='black')
# pl4
# pdf("~/.julia/dev/DataFusion/figs/vis_data_periodic.pdf",width=7,height=5)
# pl4
# dev.off()
# include posterior mean in figure
pm <-  read_delim("postmean_paths.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
d <- d %>% mutate(postmean=rep(pm$X1,2), qlow = rep(pm$X2,2), qup = rep(pm$X3,2) ) %>%  mutate(t1 = time_elapsed %% 1)
pl2 <- d %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
facet_wrap(~meastype,ncol=1,scales='free') + ylab("concentration") +
geom_path(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.3,alpha=0.8)
pl2
pdf("~/.julia/dev/DataFusion/figs/vis_data_fit.pdf",width=7,height=5)
pl2
dev.off()
# first 10 years
pl2a <- d %>% filter(time_elapsed<=10) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(0,10,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitstart.pdf",width=7,height=4)
pl2a
dev.off()
pl2b <- d %>% filter(time_elapsed>35) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(35,43,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitend.pdf",width=7,height=4)
pl2b
dev.off()
dsat <- d %>% filter(meastype=="chl")  %>% drop_na()
psat <- ggplot() +geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dsat, mapping=aes(x=time_elapsed, y=y),colour='blue',size=0.5)+
ylab("concentration") + ggtitle("satellite data") +xlab("") +
geom_line(data=d, mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)
dwater <-  d %>% filter(meastype=="chl_water") %>% drop_na()
pwater <- ggplot()+geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dwater, mapping=aes(x=time_elapsed, y=y),colour='red',size=0.5)+
ylab("concentration") + ggtitle("water data") +
geom_line(data=d,mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)+xlab("time elapsed since January 1, 1976 ")
pdf("~/.julia/dev/DataFusion/figs/vis_fit.pdf",width=7,height=4)
grid.arrange(psat, pwater)
dev.off()
# pl4 <- d  %>% ggplot(aes(x=t1, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
#   geom_smooth(colour='blue') + facet_wrap(~meastype)+
#   xlab("time elapsed") + ylab("concentration") + geom_hline(yintercept = 0)+
#  geom_point(aes(x=t1,y=postmean),size=0.3, colour='black')
# pl4
# pdf("~/.julia/dev/DataFusion/figs/vis_data_periodic.pdf",width=7,height=5)
# pl4
# dev.off()
# include posterior mean in figure
pm <-  read_delim("postmean_paths.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
d <- d %>% mutate(postmean=rep(pm$X1,2), qlow = rep(pm$X2,2), qup = rep(pm$X3,2) ) %>%  mutate(t1 = time_elapsed %% 1)
pl2 <- d %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
facet_wrap(~meastype,ncol=1,scales='free') + ylab("concentration") +
geom_path(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.3,alpha=0.8)
pl2
pdf("~/.julia/dev/DataFusion/figs/vis_data_fit.pdf",width=7,height=5)
pl2
dev.off()
# first 10 years
pl2a <- d %>% filter(time_elapsed<=10) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(0,10,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitstart.pdf",width=7,height=4)
pl2a
dev.off()
pl2b <- d %>% filter(time_elapsed>35) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(35,43,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitend.pdf",width=7,height=4)
pl2b
dev.off()
dsat <- d %>% filter(meastype=="chl")  %>% drop_na()
psat <- ggplot() +geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dsat, mapping=aes(x=time_elapsed, y=y),colour='blue',size=0.5)+
ylab("concentration") + ggtitle("satellite data") +xlab("") +
geom_line(data=d, mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)
dwater <-  d %>% filter(meastype=="chl_water") %>% drop_na()
pwater <- ggplot()+geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dwater, mapping=aes(x=time_elapsed, y=y),colour='red',size=0.5)+
ylab("concentration") + ggtitle("water data") +
geom_line(data=d,mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)+xlab("time elapsed since January 1, 1976 ")
pdf("~/.julia/dev/DataFusion/figs/vis_fit.pdf",width=7,height=4)
grid.arrange(psat, pwater)
dev.off()
# pl4 <- d  %>% ggplot(aes(x=t1, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
#   geom_smooth(colour='blue') + facet_wrap(~meastype)+
#   xlab("time elapsed") + ylab("concentration") + geom_hline(yintercept = 0)+
#  geom_point(aes(x=t1,y=postmean),size=0.3, colour='black')
# pl4
# pdf("~/.julia/dev/DataFusion/figs/vis_data_periodic.pdf",width=7,height=5)
# pl4
# dev.off()
# include posterior mean in figure
pm <-  read_delim("postmean_paths.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
d <- d %>% mutate(postmean=rep(pm$X1,2), qlow = rep(pm$X2,2), qup = rep(pm$X3,2) ) %>%  mutate(t1 = time_elapsed %% 1)
pl2 <- d %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
facet_wrap(~meastype,ncol=1,scales='free') + ylab("concentration") +
geom_path(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.3,alpha=0.8)
pl2
pdf("~/.julia/dev/DataFusion/figs/vis_data_fit.pdf",width=7,height=5)
pl2
dev.off()
# first 10 years
pl2a <- d %>% filter(time_elapsed<=10) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(0,10,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitstart.pdf",width=7,height=4)
pl2a
dev.off()
pl2b <- d %>% filter(time_elapsed>35) %>% ggplot(aes(x=time_elapsed, y=y,colour=meastype)) +
geom_point() +
ylab("concentration") +
geom_line(mapping=aes(x=time_elapsed,y=postmean),colour='black',size=0.6,alpha=0.8) +
geom_vline(xintercept=seq(35,43,by=1),col='grey')+theme(legend.position='bottom')
pdf("~/.julia/dev/DataFusion/figs/vis_data_fitend.pdf",width=7,height=4)
pl2b
dev.off()
dsat <- d %>% filter(meastype=="chl")  %>% drop_na()
psat <- ggplot() +geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dsat, mapping=aes(x=time_elapsed, y=y),colour='blue',size=0.5)+
ylab("concentration") + ggtitle("satellite data") +xlab("") +
geom_line(data=d, mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)
dwater <-  d %>% filter(meastype=="chl_water") %>% drop_na()
pwater <- ggplot()+geom_ribbon(data=d, mapping=aes(x=time_elapsed, ymin=qlow, ymax=qup), colour='lightgrey', alpha=0.2)+
geom_line(data=dwater, mapping=aes(x=time_elapsed, y=y),colour='red',size=0.5)+
ylab("concentration") + ggtitle("water data") +
geom_line(data=d,mapping=aes(x=time_elapsed,y=postmean),colour='green',size=0.2)+xlim(0,44)+xlab("time elapsed since January 1, 1976 ")
pdf("~/.julia/dev/DataFusion/figs/vis_fit.pdf",width=7,height=4)
grid.arrange(psat, pwater)
dev.off()
# pl4 <- d  %>% ggplot(aes(x=t1, y=y,colour=meastype)) + geom_point(size=0.6,alpha=0.9) +
#   geom_smooth(colour='blue') + facet_wrap(~meastype)+
#   xlab("time elapsed") + ylab("concentration") + geom_hline(yintercept = 0)+
#  geom_point(aes(x=t1,y=postmean),size=0.3, colour='black')
# pl4
# pdf("~/.julia/dev/DataFusion/figs/vis_data_periodic.pdf",width=7,height=5)
# pl4
# dev.off()
0.4*8.5 +0.2*(8.5+9+7.5)
(7.25*2 + 7.25+8.25+7)/5
a=2.7; b=6.3; # choose parameters of the beta-distribution
Nsim=1000
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
par(mfrow=c(1,2))
plot.ts(X,xlab='iteration',ylab='X[iteration]')
lines(as <- seq(0,1,l=100), dbeta(as,a,b),col='red',lwd=2,ylim=c(0,3))
hist(X,prob=TRUE,main='')
X = rc(runif(1), rep(0,Nsim-1))  # initialize the chain
X = c(runif(1), rep(0,Nsim-1))  # initialize the chain
for (i in 2:Nsim)
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
library(tidyverse)
df = data.frame(iterate=1:Nsim, vals=X)
df %>% ggplot(aes(x=iterate, y=vals)) %>% geom_line()
df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()
df %>% ggplot(aes(x=iterate, y=vals)) + geom_line() + ggtitle("trace plot")
ggplot(data=df, mapping=aes(x=vals))  + geom_histogram()
p2 = ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(fill='white')
ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(fill='white')
ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white')
p2 = ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1), aes(x), fun=function(x) sin(x) + log(x))
ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1), aes(x), fun=function(x) sin(x) + log(x))
p2 = ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1), aes(x), fun=function(x) sin(x) + log(x)))
p2 = ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1), aes(x), fun=function(x) sin(x) + log(x)))
ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1), mapping=aes(x), fun=function(x) sin(x) + log(x)))
p2 = ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) sin(x) + log(x))
p2
ggplot(data=df, mapping=aes(x=vals))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b))
ggplot(data=df, mapping=aes(x=vals,y=..density..))  + geom_histogram(colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b))
ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b))
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line() + ggtitle("trace plot") + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour='blue)
library(gridExtra)
library(tidyverse)
library(gridExtra)
a=2.7; b=6.3; # choose parameters of the beta-distribution
Nsim = 1000
X = c(runif(1), rep(0,Nsim-1))  # initialize the chain
acc = rep(0,Nsim)
for (i in 2:Nsim)
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line() + ggtitle("trace plot") + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="blue")
grid.arrange(p1,p2)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line() + ggtitle("trace plot") + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white') + xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
grid.arrange(p1,p2)
Nsim = 10000
X = c(runif(1), rep(0,Nsim-1))  # initialize the chain
acc = rep(0,Nsim)
for (i in 2:Nsim)
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line() + ggtitle("trace plot") + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
grid.arrange(p1,p2)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("")
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
grid.arrange(p1,p2)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
grid.arrange(p1,p2)
pdf('Beta-ind.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
getwd()
a=2.7; b=6.3; # choose parameters of the beta-distribution
Nsim = 5000
X = c(runif(1), rep(0,Nsim-1))  # initialize the chain
acc = rep(0,Nsim)
for (i in 2:Nsim)
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-ind.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
cat('average acceptance probability equals: ',mean(acc))
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
a=2.7; b=6.3; # choose parameters of the beta-distribution
Nsim = 5000
X = c(runif(1), rep(0,Nsim-1))  # initialize the chain
acc = rep(0,Nsim)
for (i in 2:Nsim)
{
Y=runif(1)  # proposal
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-ind.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
cat('average acceptance probability equals: ',mean(acc))
setwd("~/.julia/dev/WI4455/scr/mcmc")
eta=.1#0.9
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=X[i-1] + runif(1,-eta,eta)
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
grid.arrange(p1,p2)
cat('average acceptance probability equals: ',mean(acc))
eta=.5
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=X[i-1] + runif(1,-eta,eta)
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-rw01.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
grid.arrange(p1,p2)
cat('average acceptance probability equals: ',mean(acc))
eta=.5
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=X[i-1] + runif(1,-eta,eta)
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-rw01.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
cat('average acceptance probability equals: ',mean(acc))
eta=.1
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=X[i-1] + runif(1,-eta,eta)
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-rw01.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
cat('average acceptance probability equals: ',mean(acc))
eta=1
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=X[i-1] + runif(1,-eta,eta)
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-rw1.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
cat('average acceptance probability equals: ',mean(acc))
eta=10
X=rep(runif(1),Nsim)  # initialize the chain
acc=rep(0,Nsim)
for (i in 2:Nsim)
{
Y=X[i-1] + runif(1,-eta,eta)
A=dbeta(Y,a,b)/dbeta(X[i-1],a,b)
acc[i-1] <- (runif(1)<A)
X[i]=X[i-1] + (Y-X[i-1])*acc[i-1]
}
df = data.frame(iterate=1:Nsim, vals=X)
p1 = df %>% ggplot(aes(x=iterate, y=vals)) + geom_line()  + ylab("")
p2 = ggplot()  + geom_histogram(data=df, mapping=aes(x=vals,y=..density..), colour='white', bins=50) +
xlab("") + ylab("") +
stat_function(data=data.frame(x=c(0,1)), mapping=aes(x), fun=function(x) dbeta(x,a,b),colour="orange", size=1.2)
pdf('Beta-rw10.pdf',width=7,height=4)
grid.arrange(p1,p2)
dev.off()
cat('average acceptance probability equals: ',mean(acc))
